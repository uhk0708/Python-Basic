# -*- coding: utf-8 -*-
"""12_python_w/chatGPT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Aa7cS0i5VxFB2LbzD4qrxiRTf---3apz

조건문
"""

# if 문

'''
if 조건:
    # 조건이 Ture일 때 실행할 코드
'''

age = 21

if age > 19 :
    print("성인입니다")

# elif

'''
elif 문은 else if 줄임말
여러 개 조건 중 하나가 True 인 경우 해당 코드를 블록 실행함
if 나 elif 중 하나만 실행

if 조건 1:
    # 조건1이 True일 때 실행할 코드

elif 조건 2:
    # 조건1이 참이 아님(False)이고, 조건 2가 True 일 때 실행할 코드
'''

score = 85

if score >= 90:
    print("A 등급")
elif score >= 80:
    print("B 등급")
else:
    print("등급 줄 수 없음(미달)")

# else 문

'''
else 문은 이전의 모든 조건이 False 일 때 실행됨
if나 elif 중 어느 것도 실행되지 않을 때 사용

if 조건:
    # 조건이 True일 때 실행되는 코드
else:
    # 위의 모든 조건이 False일 때 실행하는 코드
'''

age = 15

if age >= 19:
    print("성인입니다")
else:
    print("미성년자예요")

"""반복문"""

# for 반복문
'''
for 반복문은 주로 시퀀스(리스트, 튜플, 문자열) 항목들을 순회하거나,
특정 횟수 동안 반복 작업 수행할 때 사용됨

for 변수 in 리스트(튜플, 문자열):
    수행할 문장1
    수행할 문장2
'''

과일 = ["사과","배","감","귤"]

for i in 과일:
    print(i)

# 리스트의 각 요소 출력하기
fruits = ["사과", "바나나", "오렌지"]
for fruit in fruits:
    print(fruit)
# 출력:
# 사과
# 바나나
# 오렌지

print('-' * 20)
# 문자열의 각 문자 출력하기
message = "안녕하세요!"
for char in message:
    print(char)
# 출력:
# 안
# 녕
# 하
# 세
# 요
# !

"""while 반복문"""

# while loop

'''
while 반복문은 주어진 조건이 True인 경우 코드 블록을 계속 실행함
조건이 False 가 되면 반복이 종료됨

while 조건문:
    수행할 문장1
    수행할 문장2
    수행할 문장3

'''

count = 1

while count < 6: # 정지 조건
    print(count)
    count += 1

# 1에서 5까지의 숫자 출력하기
num = 1
while num <= 5:
    print(num)
    num += 1
# 출력:
# 1
# 2
# 3
# 4
# 5

# 사용자로부터 입력 받아 처리하기
total = 0

while True:
    num = int(input("숫자를 입력하세요 (0을 입력하면 종료): "))
    if num == 0:
        break  # 0이 입력되면 반복문 종료
    total += num


print("총합:", total)

"""반복문 + 조건문"""

# 1 부터 100까지 숫자 중에서 3의 배수인 숫자를 출력해 보기

number = 1

while number <= 100: # 정지조건
    if number % 3 == 0:
        print(number)
    number += 1

"""### 커피 자판기 만들기"""

choice = input("커피 자판기를 사용하시겟습니까? (yes/no로 답해주세요)\n")
# \n : new line 한 줄 띄어서 출력해 달라는 의미

if choice == 'yes':
    while True:
        money = int(input("돈을 넣어주세요 - 숫자로 입력 예: 1000, 10000 \n"))
        number = int(input("숫자를 선택해 주세요. 1번 아이스 아메리카노 2번 라떼 3번 콜드브루\n"))

        if number == 1:
            print("아이스아메리카노를 선택하셨네요. 거스름돈은 ", money-1000, "원 입니다")
            break

        elif number == 2:
            print("라떼를 선택하셨네요. 거스름돈은 ", money-1500, "원 입니다")
            break

        elif number == 3:
            print("콜드브루를 선택하셨네요. 거스름돈은 ", money-1500, "원 입니다")
            break

        else:
            print("없는 메뉴입니다.")
            break

# 커피 가격 설정
coffee_menu = {
    "에스프레소": 3000,
    "아메리카노": 3500,
    "카페라떼": 4000,
    "카푸치노": 4500
}

# 주문 내역을 저장할 빈 리스트 생성
orders = []

# 주문 프로세스 시작
print("커피 자판기를 시작합니다. 주문을 완료하려면 '종료'를 입력하세요.")

while True:
    # 커피 종류 및 수량 입력 받기
    coffee_name = input("주문할 커피 종류를 입력하세요: ")
    if coffee_name == "종료":
        break  # 종료 입력 시 루프 종료
    quantity = int(input("주문 수량을 입력하세요: "))

    # 주문한 커피가 메뉴에 있는지 확인하고, 주문 내역에 추가하기
    if coffee_name in coffee_menu:
        order_price = coffee_menu[coffee_name] * quantity
        orders.append((coffee_name, quantity, order_price))
        print(f"{coffee_name} {quantity}잔이 주문되었습니다.")
    else:
        print("커피 메뉴에 없는 항목입니다. 다시 주문해주세요.")

# 주문 내역 출력
print("\n주문 내역:")

total_price = 0
for order in orders:
    coffee_name, quantity, order_price = order
    print(f"{coffee_name}: {quantity}잔, 가격: {order_price}원")
    total_price += order_price  # total_price = total_price + order_price

print(f"\n총 주문 금액: {total_price}원")
print("이용해 주셔서 감사합니다. 안녕히 가십시오!")

"""함수"""

'''
def make_apple_juice(apple):
    return "사과주스"
'''

def make_apple_juice(x):
    return "사과주스"

# x : 매개변수

make_apple_juice("사과")

# 두 수를 더하는 함수 정의
def add_numbers(x, y):
    sum = x + y
    return sum

# 함수 호출
result = add_numbers(5, 3)
print("결과:", result)  # 출력: 8