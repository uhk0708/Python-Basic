# -*- coding: utf-8 -*-
"""python_01_print().ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gDCiAtlBpqj2VwhKSkjJDSGOu0NAr0FG

구글콜랩 텍스트 기본 사용

**굵은 텍스트**
*이탤릭체 텍스트*
# 새 섹션
## 새 섹션
### 새 섹션

무작정 따라하는 파이썬

*   멋진 삼행시 짓기_print()실습
"""

print("저는 자랑스러운 멀캠의 예비 데이터사이언스트입니다.")
print("진짜로 방갑다고...")
print("참말이여")

"""기본 자료형"""

# 숫자 50과 숫자 50을 더해서 출력하기

print(50 + 50)

# 문자열(string) "50"과 문자열(string) "50" 더해서 출력하기

print("50"+"50")
# 문자와 문자 더하면 >> 옆에 붙는다

# 파이썬에서 여러 개의 원소(element, 숫자, 문자)를 담는 그릇 >> 리스트(list 목록)
print([50]+[50])

"""변수
- 변하는 수
"""

# 파이썬 변수의 정의

apple = 1
print(apple)

Apple = '사과'
print(Apple)

# 정수와 소수(부동소수점/실수)

a = 1.2
print(a)

b = 2
print(b)

print(a+b)

# 문자열

가 = 'hello'
print(가)

나 = " good morning"
# space(빈 공백)도 문자로 인식

print(가+나)

# bool

a = True
print(a)

b = False
print(b)

print(a == b)
# == : 같다

print(a != b)
# != : 다르다

"""파이썬 연산자"""

# 할당 연산자
a = 1
a = a+1

print(a)

a = 1

a+=1
# a = a+1
print(a)

b = 1
b -= 2
# b = b-2

print(b)

# 산술 연산자

a =  1
b = 32

print(a>b)
# True/False 로 반환됨

c = -3   # int(정수)
d = -0.2 # float(소수)

print(c <= d)

a =  1
b = 42

print(a == b)

c = -3   # int(정수)
d = -0.2 # float(소수)

print(c != d)

# 논리연산자(and, or, not)

a = True
b = False

print(a and b)
print(a or b)
print(not a)
print(not b)

# 멤버(member, 소속) 연산자 (in / not in)

a = "사과"
b = ['사과', '배', '참외','수박', '복숭아']

print(a in b)

c = 'apple'
d = ['Apple', 'pear', 'watermelon','peach']

print(c in d)
# 왜? 대소문자 구분

# 식별 연산자(is)

a = '사과'
b = '사과'

print(a is b)  # False

a = 12
b = 12

print(a is b)
# a는 b이냐?
# a와b는 메모리의 동일한 객체(정수객체 '12')를 참조하니

c = 12 # int(정수)
d = 12

print(c is not d)

# c와 d가 다른가요?
# c와 d가 실제로 메모리의 동일한 객체(정수객체 '12')를 참조
# >> 동일한 객체

e = 1,2,3
print(e)
print(type(e)) #tuple 상수 (변하지 않는 수)

f =[1,2,3]
print(f)
print(type(f)) # list(변할 수 있는 수)



"""질의 응답"""

홑따 = 'a'
쌍따 = "a"

print(홑따 == 쌍따)

# is 와 '==' 차이

'''
1. 'is' 와 '==' 동등성 비교
2. '==' 연산자 : 두 객체(a, b....) 값이 동일한지 비교
3. 'is' 연산자 : 두 객체(a, b....) 식별자가 동일한지 비교
   >> 두 객체 (a,b)가 메모리 상에서 같은 위치있는 지 확인
'''

a = [1,2,3]
b = [1,2,3]
c = a

print(a ==b) # 값 비교  [1,2,3]

print(a is b)
# a와 b는 값은 같다. 그러나, 서로 다른 메모리 위치에 있음

print(a is c)
# a와 c는 동일한 객체를 참조함

# 추가

# 변수에는 정수, 실수 같은 숫자를 저장할 수 있어요.

num1 =1
num2 = 2

print(num1 - num2)

# 영어나 한글과 같은 문자도 저장이 가능해요

char = "a"
print(char)

# 이런 문자들의 집합도 리스트로 저장할 수 있네요.
# 리스트 : 여러 원소(element)를 담는 그릇

List_ = [1, 'a', 'python']
print(List_)

print(List_)
print(List_[0]) # 숫자 1
print(List_[1]) # 문자열 a
print(List_[2]) # 문자열 python
# print(List_[3]) # 에러 발생 indexerror

# 그 목록(List_)에 원소 몇 개있니?

len(List_)
# len : length

# my_var 라는 이름의 변수를 만들고, 원하는 값을 넣어 보아요

my_var_1 = 'a'  # string(문자열)
my_var_2 = List_ # 리스트

# print(my_var_1 + my_var_2)
print(my_var_1 + my_var_2[2])
# 같은 데이터 타입(자료형)이여야 연산이 가능함

# 변수에 문자열로 된 정수와 실수를 저장하면

a = '345' # 문자 >> 정수(int: integer)
b = '3.14' # 문자 >> 실수(float)

print(a)
print(b)
print(type(a)) # 문자(string)
print(type(b)) # 문자(string)

# 문자 >> 정수(int: integer)
a = int(a)
print(type(a))

print(b)
print(type(b))

b = float(b)
print(b)
print(type(b))

b = int(b) # 정수로 변경
print(b)

c = 4.89
print(c)
print(type(c))

int(c)

