# -*- coding: utf-8 -*-
"""python_09_function_함수.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z8x1Ze4j56JgijwAhKGPjkNizM619cGG
"""

# define >> 함수를 정의

'''
def 함수이름():
    처리해야할 코드

'''

# '안녕하세요'라고 인사하는 함수

def hello():
    print("안녕하세요")

# 호출
hello()

print(hello())

def 사랑증빙():
    print("사랑해. 정말로~진심이야. 그만 날 시험해")

print(사랑증빙())

# 반복문으로 여러 번 호출

for i in range(5):
    hello()

def 그만확인():
    print("아 그만 좀 해. 사랑해. 사랑한다고.")

그만확인()

for i in range(3):
    그만확인()

def thankyou():
    print("감사합니다.")

thankyou()

count = 0 # 초기화

while count < 10:
    thankyou()
    count = count + 1

count = 0 # 초기화

while count < 10:
    thankyou()
    count = count + 1
    if count == 8:
        break;

"""매개변수가 있는 함수 정의"""

def hello(name):
    print(name + '님 저희 멀캠에 방문해 주셔서 감사합니다')

# 호출
print(hello('김선규'))

list_name = ['진욱','장윤','지우']

# 매개변수가 있는 함수 반복

for i in ['진욱','장윤','지우']:
    hello(i)

# 반환값(return) 이 있는 함수

def add_number():
    number = 1+1
    return number

add_number()

# 매개변수와 반환값이 있는 함수(일반적)
def add_number(a,b):
    number = a+b
    return number

add_number(4,6)

y = add_number(4,6) # 함수의 객체화
print(y)

"""추가학습"""

# 합, 길이 구하기

my_tuple = 3,1,2,4

print(my_tuple)

print(sum(my_tuple))

print(len(my_tuple))

my_list = [10,20,30,40,50]

var1 = sum(my_list)
var2 = len(my_list) # 원소의 개수 >> n

ave = var1 / var2
print(var1)
print(var2)
print(ave)

"""함수 def()"""

# 사용자 정의 함수

def plus(a,b):
    return a+b

print(plus(1,2))

def plus_print(a,b):
    print(a+b)
    # a하고 b를 더해서 '출력' 하라는 의미

print(plus_print(3,4))

# cf 비교: return 값 있는 것은??

def times_return(a,b):
    return a*b
    # return(반환)이용, 메모리 공간에 저장되어 있는 a*b를 반환하라는 의미

print(times_return(3,4))

"""메소드(Method)"""

my_list = [5,4,3,2,1]

my_list.append(50)
# 원소를 추가하는 메소드(리스트 뒤에 추가된 값이 붙게 함)
print(my_list)

my_list.sort()
# sort() : 정렬하는 메소드(default:오름차순)
print(my_list)

my_dict = {"one":1,"two":2,"three":3}

my_dict.keys()

[my_dict.keys()]

list(my_dict.keys())
eng = list(my_dict.keys())
print(eng)

my_dict.values()

"""인자와 매개변수"""

def plusDouble(a,b): # a,b >> 매개변수
    return 2*(a+b)

print(plusDouble(3,4)) # 임의로 입력한 값인 3,4를 '인자'라고 부른다

# solve라는 함수를 정의해 볼까요? a와 b라는 매개변수를 갖고 있어요

def solve(a,b): # a,b >> 매개변수
    return a*b

# solve() 함수에 3,4 인자를 넣어 보세요

print(solve(3,4))

print(solve(3, ['너 생각!']))

"""도전 ! 실전 코드"""

# n 명의 학생의 이름과 점수를 입력받는 함수를 만들게요

def get_students(n):
    students = {}

    for i in range(n):
        name = input()
        score = int(input()) # 문자 >> 숫자
        students[name] = score # dict에 key값으로 새로운 score 추가

    return students

# 학생의 이름과 점수를 받은 것을 바탕으로 학점(등급) 매길게요.

def get_grade(score):
    if score >= 90:
        return "A"
    elif score >=80:
        return "B"
    elif score >=70:
        return "C"
    elif score >=60:
        return "D"
    else:
        return "F"


n = int(input())
students = get_students(n)

for student_name in students.keys():
    print(student_name + ": "+get_grade(students[student_name]))

